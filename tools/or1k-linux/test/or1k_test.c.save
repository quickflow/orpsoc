
#define MC_CSR_BASE 0x08005000
#define MC_CSR_INIT (MC_CSR_BASE + 0x10)
#define MC_CSR_LMR  (MC_CSR_BASE + 0x14)

#define DRAM_BASE   0x00000000

#define SRAM_BASE   0xE0000000

#define FLASH_BASE  0xF0000000

#define GPIO_BASE   0x40000000
#define GPIO_IN     (GPIO_BASE + 0x00)
#define GPIO_OUT    (GPIO_BASE + 0x04)
#define GPIO_OEN    (GPIO_BASE + 0x08)

void main()
{
  *((unsigned int *) 0x08005010) = 0x1; // mc_ reg rf0  mc_cs_0 // csr_r2[31:24], csr_r[10:1] (init)
  *((unsigned int *) 0x08005018) = 0x1; // mc_ reg rf1  mc_cs_1

  // delay a while
  *((unsigned int *) 0xe0000000) = 0; // zero out SRAM [0]
  while(*((unsigned int *) 0xe0000000) < 64) {
    *((unsigned int *) 0xe0000000) = *((unsigned int *) 0xe0000000) + 1; // increment it
  }
  

  // read back the mc_rf
  *((unsigned int *) 0xe0000000) = *((unsigned int *) 0x08005000);
  *((unsigned int *) 0xe0000004) = *((unsigned int *) 0x08005004);
  *((unsigned int *) 0xe0000008) = *((unsigned int *) 0x08005008);
  *((unsigned int *) 0xe000000c) = *((unsigned int *) 0x0800500c);
  *((unsigned int *) 0xe0000010) = *((unsigned int *) 0x08005010);
  *((unsigned int *) 0xe0000014) = *((unsigned int *) 0x08005014);
  *((unsigned int *) 0xe0000018) = *((unsigned int *) 0x08005018);
  *((unsigned int *) 0xe000001c) = *((unsigned int *) 0x0800501c);
  *((unsigned int *) 0xe0000020) = *((unsigned int *) 0x08005020);
  *((unsigned int *) 0xe0000024) = *((unsigned int *) 0x08005024);
  *((unsigned int *) 0xe0000028) = *((unsigned int *) 0x08005028);
  *((unsigned int *) 0xe000002c) = *((unsigned int *) 0x0800502c);
  *((unsigned int *) 0xe0000030) = *((unsigned int *) 0x08005030);
  *((unsigned int *) 0xe0000034) = *((unsigned int *) 0x08005034);

  // check some mc_rf
  while(1) {
    if (*((unsigned int *) 0x08005000))
      break;
    if (*((unsigned int *) 0x08005020))
      break;
    if (*((unsigned int *) 0x08005010))
      break;
    if (*((unsigned int *) 0x08005000))
      break;
  }

  // try lmr ?
  *((unsigned int *) 0x08005014) = 0x22; // load mode reg req mc_cs_0 [CAS latency=2, Sequential Burst Type, Programmed Burst Length]
  *((unsigned int *) 0x0800501c) = 0x22; // load mode reg req mc_cs_1

  // try writes
  *((unsigned int *) 0x5000) = 0x11111111;
  *((unsigned int *) 0x5004) = 0x22222222;
  *((unsigned int *) 0x5008) = 0x33333333;
  *((unsigned int *) 0x500c) = 0x44444444;

  // try reads
  *((unsigned int *) 0x8000) = *((unsigned int *) 0x5000);
  *((unsigned int *) 0x8004) = *((unsigned int *) 0x5004);
  *((unsigned int *) 0x8008) = *((unsigned int *) 0x5008);
  *((unsigned int *) 0x800c) = *((unsigned int *) 0x500c);
  
  *((unsigned int *) GPIO_OEN) = 0xff;
  *((unsigned int *) GPIO_OUT) = 0x00;
  *((unsigned int *) GPIO_OUT) |= (*((unsigned int *) 0x8000) == 0x11111111);
  *((unsigned int *) GPIO_OUT) |= (*((unsigned int *) 0x8004) == 0x22222222) << 1;
  *((unsigned int *) GPIO_OUT) |= (*((unsigned int *) 0x8008) == 0x33333333) << 2;
  *((unsigned int *) GPIO_OUT) |= (*((unsigned int *) 0x800c) == 0x44444444) << 3;

  // read back the mc_rf
  *((unsigned int *) 0xe0000000) = *((unsigned int *) 0x08005000);
  *((unsigned int *) 0xe0000004) = *((unsigned int *) 0x08005004);
  *((unsigned int *) 0xe0000008) = *((unsigned int *) 0x08005008);
  *((unsigned int *) 0xe000000c) = *((unsigned int *) 0x0800500c);
  *((unsigned int *) 0xe0000010) = *((unsigned int *) 0x08005010);
  *((unsigned int *) 0xe0000014) = *((unsigned int *) 0x08005014);
  *((unsigned int *) 0xe0000018) = *((unsigned int *) 0x08005018);
  *((unsigned int *) 0xe000001c) = *((unsigned int *) 0x0800501c);
  *((unsigned int *) 0xe0000020) = *((unsigned int *) 0x08005020);
  *((unsigned int *) 0xe0000024) = *((unsigned int *) 0x08005024);
  *((unsigned int *) 0xe0000028) = *((unsigned int *) 0x08005028);
  *((unsigned int *) 0xe000002c) = *((unsigned int *) 0x0800502c);
  *((unsigned int *) 0xe0000030) = *((unsigned int *) 0x08005030);
  *((unsigned int *) 0xe0000034) = *((unsigned int *) 0x08005034);


}
